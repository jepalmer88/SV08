[gcode_macro heating_bed_indicator]
# turn on RED using a variable PWM between 0-255, turn off all other LED colors
gcode:
        {% for i in range(1, 5) %}
            SET_LED LED=ccs_rgb RED={params.LED_BRIGHTNESS|int} GREEN=0 BLUE=0 INDEX={i} TRANSMIT=1
        {% endfor %}


[gcode_macro heating_nozzle_indicator]
# turn on RED full brightness and BLUE using a variable PWM between 0-255, turn off all other LED colors
gcode:
        {% for i in range(1, 5) %}
            SET_LED LED=ccs_rgb RED=0 GREEN=0 BLUE={params.LED_BRIGHTNESS|int} INDEX={i} TRANSMIT=1
        {% endfor %}


[delayed_gcode pre_heat_bed]
gcode:
        # Update bed indicator LEDs until temparture reached (PWM value from 0 to 255)
        {% if (printer.heater_bed.temperature|int) < (printer.heater_bed.target|int) %}
                heating_bed_indicator LED_BRIGHTNESS={printer.heater_bed.temperature|int / printer.heater_bed.target|int * 255}
                        UPDATE_DELAYED_GCODE ID=pre_heat_bed DURATION=2
        {% else %}
                # Notify when bed is at target temperature
                {printer.gcode.action_respond_info(
                        "Bed Heating Finished")}
                # Set nozzle target temperature
                M104 S{ printer["gcode_macro pre_printing_sequence"].nozzle_temp|int}
                # Start nozzle heating sequence
                UPDATE_DELAYED_GCODE ID=pre_heat_nozzle DURATION=1
                # Stop updating bed heating indicator LEDs
                UPDATE_DELAYED_GCODE ID=pre_heat_bed DURATION=0
        {% endif %}


[delayed_gcode pre_heat_nozzle]
gcode:
        # Update nozzle indicator LEDs until temparture reached (PWM value from 0 to 255)
        {% if (printer.extruder0.temperature|int) < (printer.extruder0.target|int) %}
                heating_nozzle_indicator LED_BRIGHTNESS={printer.extruder0.temperature|int / printer.extruder0.target|int * 255}
                UPDATE_DELAYED_GCODE ID=pre_heat_nozzle DURATION=1
        {% else %}
                # Notify when nozzle is at target temperature
                {printer.gcode.action_respond_info(
                        "Nozzle Heating Finished")}
                # Start purge line sequence indicator
                purge_sequence_indicator
                # Start purge line printing sequence
                purge_sequence
                # Stop updating nozzle heating indicator LEDs
                UPDATE_DELAYED_GCODE ID=pre_heat_nozzle DURATION=0
        {% endif %}


[gcode_macro pre_printing_sequence]
variable_nozzle_temp: 0
gcode:
        # Home all
        G28
        turn_lights_off
        # Set bed target temperature
        M140 S{params.TARGET_TEMP_BED|int}
        # store nozzle temp variable for later
        SET_GCODE_VARIABLE MACRO=pre_printing_sequence VARIABLE=nozzle_temp VALUE={params.TARGET_TEMP_NOZZLE}
        # Start bed heating sequence
        UPDATE_DELAYED_GCODE ID=pre_heat_bed DURATION=1